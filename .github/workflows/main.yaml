name: ‚ô¶ Yuno CI

on:
  push:
    branches:
      - ci-cd
  pull_request:
    branches:
      - main

jobs:
  analyze:
    name: üîé Run analyzer and formatter
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.1'
          cache: true
      - name: üì¶ Get dependencies
        run: |
          flutter clean
          flutter pub get
          flutter doctor -v
      - name: üîΩ Import files
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          KEY_JKS: ${{ secrets.KEY_JKS }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          if [[ -n "$BACKEND_URL" ]] ; then "$BACKEND_URL" > .env ; fi
          cd android
          if [[ -n "$KEY_PROPERTIES" ]] ; then echo "$KEY_PROPERTIES" | base64 --decode > key.properties  ; fi
          if [[ -n "$KEY_JKS" ]] ; then echo "$KEY_JKS" | base64 --decode > app/upload-keystore.jks  ; fi
      - name: üîç Analyze code
        run: |
          flutter analyze
          dart format --set-exit-if-changed --line-length=100 ./lib

  build:
    needs: [ analyze ]
    name: üî® Build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        target: [ 'android' ]
        include:
          - target: android
            os: ubuntu-latest
            build-args: 'apk --split-per-abi'
            java-version: '11'
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
      - name: üîΩ Import files
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          KEY_JKS: ${{ secrets.KEY_JKS }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          if [[ -n "$BACKEND_URL" ]] ; then "$BACKEND_URL" > .env ; fi
          cd android
          if [[ -n "$KEY_PROPERTIES" ]] ; then echo "$KEY_PROPERTIES" | base64 --decode > key.properties  ; fi
          if [[ -n "$KEY_JKS" ]] ; then echo "$KEY_JKS" | base64 --decode > app/upload-keystore.jks  ; fi
      - if: ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.1'
          cache: true
      - name: üè≠ Build production
        run: |
          flutter build ${{ matrix.build-args }} --release --flavor production --target lib/main_production.dart
          cp build/app/outputs/flutter-apk/app-production-release.apk yuno-android.apk
      - name: ‚¨ÜÔ∏è Upload generated apk to the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apk-build
          path: app/yuno-android.apk

